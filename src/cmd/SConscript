import re

Import('env', 'isWindows', 'isLinux')
libs = ['lightgrep']
libs.extend([lib + env['boostType'] for lib in
                 ['boost_system', 'boost_thread', 'boost_program_options', 'boost_filesystem']])
if (isLinux):
  libs.append('pthread')
elif (isWindows):
  libs.extend(['ws2_32', 'mswsock']) # so stupid that I have to specify winsock

mainEnv = env.Clone()
if (env['customer'] and len(env['customer'])):
  if (isWindows):
    esc = ''.join([ '\\x%x' % ord(c) for c in env['customer']])
  else:
    esc = ''.join([ '\\\\x%x' % ord(c) for c in env['customer']])
  print("esc customer: %s" % esc)
  mainEnv.Append(CPPDEFINES=['LIGHTGREP_CUSTOMER=%s' % esc])

main = mainEnv.StaticObject('main.cpp')

# serverEnv = env.Clone()
# servercflags = env['CCFLAGS']
# print(servercflags)
# print(str(servercflags).replace('-O3', '-g -O1'))
# serverEnv.Replace(CCFLAGS=str(env['CCFLAGS']).replace('-O3', '-g -O1'))
# server = serverEnv.StaticObject('server.cpp')

# not_main = [ f for f in Glob('*.cpp') if 'main.cpp' not in str(f) and 'server.cpp' not in str(f)]
not_main = [ f for f in Glob('*.cpp') if 'main.cpp' not in str(f)]

print([str(n) for n in not_main])

# ret = env.Program('lightgrep', main + server + not_main, LIBS=libs)
ret = env.Program('lightgrep', main + not_main, LIBS=libs)
Return('ret')
